Required conf values
  - gitRepo - a microservice repo (example: Engineering/mint-das)

Optional conf values
  - projectType - The type of project you want to build (default: 'gradle')
  - gitCredentialsId - alternate Jenkins Credentials ID (default: 'st-github-builds')
  - defaultBranch - Alternative default branch to build out of (default: 'master')
  - disableTests - set to true if this microservice does not have tests to run (default: false)
  - includeIntegrationTests - set to true if the Test stage should include integration tests (default: false)
  - disableDbUpdates - set to true if this microservice does not liquibase for database updates (default: false)
  - disableEmail - set to true if email notifications should be disabled (default: false)
  - notificationEmailAddr - specify an alternate address for email notifications (default: builds@squaretade.com)
  - subproject - specify if <code>gitRepo</code> has multiple microservices (example: warranty-migration-consumer)
  - dbCreateCredentialsId - Jenkins Credential ID for the <code>gradlew liquibaseUpdate<code> create password (default: 'stage-db-admin-password')
  - dbMainCredentialsId - Jenkins Credential ID for the microservice <code>gradlew liquibaseUpdate<code> main password (default: 'stage-db-admin-password')
  - dbInitCredentialsId - Jenkins Credential ID for the microservice <code>gradlew liquibaseUpdate<code> init password (default: 'stage-db-admin-password')
  - enableJacocoReport - Set to true if this microservice have JaCoCo coverage reports (default: false)
  - deployTaskOverride - Override the current gradle deploy task (default: deploy)
  - additionalBuildOpts - Additional config option for the build step
  - mavenTomcatDeploy - set to true if the project needs to be deployed in a Tomcat instance (default: false)
  - environmentList - Alternative environment list (default: preproduction) (availables: preproduction, dwhscripts, gridapp)
  - timeout.time - Timeout time for the job (default = 30)
  - timeout.unit - Timeout units for the job (default = MINUTES)
  - commandTimeout - Set the timeout in seconds to stage COMMAND (default: 60)
  - veracodeMethodType - SERIAL or PARALLEL (default: SERIAL)
  - veracodeApps - An optional list of Veracode application map configurations.  Each application has the following configuration options:
     - preBuild - Specify a command line that will be used to build a custom artifact specifically for Veracode policy scanning
     - appName - Veracode application name (example: mint-das)
     - sandboxName - Veracode sandbox name (default: 'Cloudbees Sandbox')
     - credentialsId - Veracode credentials ID (default: '5021cb1f-98a3-4d5b-af99-d6adf29a8d66')
     - includesPattern - Veracode upload includes pattern (default: 'build/libs/*.jar')
     - excludesPattern - Veracode upload excludes pattern (default: 'build/libs/*sources.jar,build/libs/*javadoc.jar')
     - timeout -  Optional time to wait in minutes for the scan to complete (example: 60).
     - uploadFrom: - The location within the workspace to upload artifacts from (default: '.')
  - triggerJob - An optional list of params to trigger a job inside uServiceStagePipeline
     - jobName - Name of the job to to be triggered (example: 'warranty-queuer', '../Automation/wcs-test')
     - parameters - An optional list of parameters to be passed to the triggered job (example: [string(name: 'ENVIRONMENT', value: 'stage2')])
                    note: You can pass in how many params you want, always using the example structure above,
                          also it is highly recommended that you just inform the params that needs to be overridden,
                          if the param has a default value and there is no explicit need to override them, then it is not necessary to include them in the params list.

Example Configurations

    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
            gitRepo: 'Engineering/warranty-migration',
            subproject: 'warranty-migration-consumer',
            disableDbUpdates: true,
            jacocoReport: true
    )

    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
            gitRepo: 'Engineering/mint-das',
            dbMainCredentialsId: 'stage-db-mint-das-main-password'
    )

    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
            gitRepo: 'Engineering/communication-transmission',
            commandTimeout: 100
    )

    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
        gitRepo: 'Engineering/comm-template',
        disableDbUpdates: true,
        disableTests: true,
        veracodeApps: [
                [ appName: 'comm-template',
                  includesPattern: '**/build/libs/*.jar',
                  excludesPattern: '**/comm-template-validator.jar'
                ]
        ]
    )

    //Using Prebuild option
    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
        gitRepo: 'Engineering/comm-template',
        disableDbUpdates: true,
        disableTests: true,
        veracodeApps: [
            [
                preBuild: './gradlew -Dorg.gradle.project.buildDir=veracode -PdisableSpringBootExecutable :com-template-validator:assemble',
                appName: 'comm-template',
                includesPattern: 'comm-template-service/build/libs/*.jar,comm-template-validator/veracode/libs/*.jar'
            ]        
        ]
    ) 

    //Maven deployment
    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
        gitRepo: 'Engineering/datawarehouse',
        subproject: 'gridapp',
        disableDbUpdates: true,
        disableTests: true,
        disableEmail: true,
        isMavenProject: true,
        mavenTomcatDeploy: true,
        veracodeApps: [
            [ 
            appName: 'datawarehouse',
            includesPattern: 'target/*.war'
            ]
        ]
    )

    //Using scan method option
    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
        gitRepo: 'Engineering/comm-template',
        disableDbUpdates: true,
        disableTests: true,
        veracodeScanMethod: 'PARALLEL',
        veracodeApps: [
            [
                appName: 'comm-template',
                includesPattern: 'comm-template-service/build/libs/*.jar,comm-template-validator/veracode/libs/*.jar'
            ]
        ]
    )

    @Library('devops-jenkins-pipeline-shared-library')_
    uServiceStagePipeline(
            gitRepo: 'Engineering/warranty-migration',
            triggerJob: [
                jobName: 'warranty-migration-tests',
                parameters: [string(name: 'ENVIRONMENT', value: 'stage2')]
            ]
    )
